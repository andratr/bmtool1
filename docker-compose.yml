version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8085:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: "8080"
      OLLAMA_BASE_URL: "http://ollama:11434"
      WEAVIATE_URL: "http://weaviate:8080"
      OPENROUTER_API_KEY_FILE: "/run/secrets/openrouter_api_key"

      # ⬇️ enable startup schema sync + (optional) ingestion-after-create/update
      SCHEMA_SYNC_ENABLED: "true"
      WEAVIATE_CLASS_NAME: "PairChunk"   # must match "class" in your weaviate.schema.json
      INGEST_ON_REPLACE: "true"
      INGEST_ROOT_DIR: "/app/data/pairs"
    volumes:
      - ./secrets:/run/secrets:ro
      - ./files/anon-pairs:/app/data/pairs
    ports:
      - "8089:8080"        # host:container
    depends_on:
      weaviate:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/actuator/health | grep -q UP"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  weaviate:
    image: semitechnologies/weaviate:1.25.7
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 200
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: ''
      CLUSTER_HOSTNAME: 'node1'
      ENABLE_SCHEMA_AUTO_CREATE: 'true'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8080/v1/.well-known/ready >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Use official image unless you truly need a custom build
  ollama:
      build: ./ollama
      ports:
        - "11434:11434"
      volumes:
        - ollama_data:/root/.ollama
      restart: unless-stopped
      healthcheck:
        test: [ "CMD-SHELL", "ollama list >/dev/null 2>&1 || exit 1" ]
        interval: 10s
        timeout: 5s
        retries: 30


volumes:
  weaviate_data: {}
  ollama_data: {}
